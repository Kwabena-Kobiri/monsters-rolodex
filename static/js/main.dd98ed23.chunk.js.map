{"version":3,"sources":["components/search-box/search-box.component.jsx","components/card/card.component.jsx","components/card-list/card-list.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchBox","placeholder","handleChange","className","type","onChange","Card","props","alt","src","monster","id","name","email","CardList","monsters","map","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,G,MAAY,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aACpC,OACI,8BACI,uBACIC,UAAU,SACVC,KAAK,SACLH,YAAaA,EACbI,SAAUH,QCPbI,G,YAAO,SAACC,GACjB,OACI,sBAAKJ,UAAU,iBAAf,UACI,qBAAKK,IAAI,UAAUC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,4BACtB,6BAA4BJ,EAAMG,QAAQE,MAAjCL,EAAMG,QAAQC,IACvB,4BAAIJ,EAAMG,QAAQG,aCJjBC,G,MAAW,SAACP,GACrB,OACI,qBAAKJ,UAAU,YAAf,SAEMI,EAAMQ,SAASC,KAAI,SAAAN,GAAO,OAC1B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WC4BlBM,E,kDAhCb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXH,SAAU,GACVI,YAAa,IALH,E,gEASS,IAAD,OAClBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEV,SAAUS,S,+BAGpC,IAAD,SAC2BE,KAAKR,MAA9BH,EADF,EACEA,SAAUI,EADZ,EACYA,YACZQ,EAAmBZ,EAASa,QAAO,SAAAlB,GAAO,OAC9CA,EAAQE,KAAKiB,cAAcC,SAASX,EAAYU,kBAClD,OACM,sBAAK1B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEF,YAAY,kBACZC,aAAgB,SAAA6B,GAAC,OAAI,EAAKN,SAAS,CAAEN,YAAaY,EAAEC,OAAOC,WAE7D,cAAC,EAAD,CAAUlB,SAAUY,W,GA3BdO,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.dd98ed23.chunk.js","sourcesContent":["import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => {\r\n    return (\r\n        <div>\r\n            <input \r\n                className='search'\r\n                type='search' \r\n                placeholder={placeholder} \r\n                onChange={handleChange}\r\n            />\r\n        </div> \r\n    )\r\n}\r\n","import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => {\r\n    return (\r\n        <div className='card-container'>\r\n            <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n            <h2 key={props.monster.id}>{props.monster.name}</h2>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    )\r\n}\r\n ","import React from 'react';\r\nimport { Card } from '../card/card.component';\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = (props) => {\r\n    return (\r\n        <div className='card-list'>\r\n            {\r\n              props.monsters.map(monster => \r\n              <Card key={monster.id} monster={monster} />\r\n              )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, {Component} from 'react';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport './App.css';\nimport { CardList} from './components/card-list/card-list.component';\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [ ],\n      searchField: ''\n    }\n  };\n\n    componentDidMount() {\n      fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users}))\n    };\n  \n  render(){\n    const { monsters, searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase()))\n    return(\n          <div className=\"App\">\n            <h1>Monsters Rolodex</h1>\n            <SearchBox \n              placeholder='search monsters'\n              handleChange = {e => this.setState({ searchField: e.target.value})}\n            />\n            <CardList monsters={filteredMonsters}/>\n          </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}